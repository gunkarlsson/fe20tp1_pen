// VARIABLES
const textarea = document.querySelector("#textarea");
const newDoc = document.querySelector("#new-doc");
const deleteDocButton = document.querySelector("#delete-doc");
const noteTitle = document.querySelector("#note-title");
const favorite = document.querySelector("#favorite-tag");
const tagName = document.querySelector("#tag-name");
const tagButton = document.querySelector("#tag-button");
const noteList = document.querySelector("#note-menu");
const newDocButton = document.querySelector(".new-doc");
const edit = document.querySelector(".edit");
const editBackButton = document.querySelector(".edit-back-button");

//MENU SIDEBAR
const sidebarToggle = document.querySelector(".sidebar-toggle");
const sidebar = document.querySelector(".menu-sidebar");
const sidebarCloseButton = document.querySelector(".sidebar-close-button");

//EDITOR SIDEBAR
const editorSidebarToggle = document.querySelector(".editor-sidebar-toggle");
const editorSidebar = document.querySelector(".editor-sidebar");
const editorSidebarCloseButton = document.querySelector(".editor-sidebar-close-button");

// OBJECTS
const docDataSkeleton = {
  id: "",
  title: "",
  content: "",
  favorite: false,
  creationDate: "",
  lastSavedDate: "",
  tags: [],
};

// EVENTLISTENERS
newDoc.addEventListener("click", () => {

  createNewDoc();
});

deleteDocButton.addEventListener("click", () => {
  textarea.value = "";

  deleteDoc();
});

// Input event
textarea.addEventListener("input", (e) => {
  // input value in textarea,
  saveDoc();
});

noteTitle.addEventListener("input", (e) => {
  saveDoc();
});

favorite.addEventListener("click", () => {
  saveDoc();
});

tagButton.addEventListener("click", () => {
  saveDoc();
  tagName.value = "";
});

// FUNCTIONS
function saveDoc() {
  // börja fylla docDataSkeleton med textarea & note value
  docDataSkeleton.content = textarea.value;
  docDataSkeleton.title = noteTitle.value;
  docDataSkeleton.favorite = favorite.checked;
  docDataSkeleton.tags.push(tagName.value);

  
  // kollar om det finns ett creation date, om inte så skapar den datum)
  // genererar även ID genom date object
  // ! gör att tom stärng = false
  if (!docDataSkeleton.id) {
    docDataSkeleton.creationDate = new Date();

    // unique ID generated by timestamp
    docDataSkeleton.id = Date.now();
  }
  docDataSkeleton.lastSavedDate = new Date();
  window.localStorage.setItem(
    docDataSkeleton.id,
    JSON.stringify(docDataSkeleton)
  );
}

function deleteDoc() {
  // remove ID and remove the item
  window.localStorage.removeItem(docDataSkeleton.id);
}

function createNewDoc() {
  // töm textarea för ny yta
  textarea.value = "";
  noteTitle.value = "";
  tagName.value = "";

  for (element in docDataSkeleton) {
    if (element === "tags") {
      // töm tags array
      docDataSkeleton[element] = [];
    } else {
      // övriga blir tom sträng
      docDataSkeleton[element] = "";
    }
  }
}

function loadDoc (docData) {
  textarea.value = docData.content;
  noteTitle.value = docData.title;
  tagName.value = docData.tags;
  favorite.value = docData.favorite;
  docDataSkeleton.id = docData.id;
}



let storage = window.localStorage;

for (key in storage) {
  if (window.localStorage.getItem(key) !== null) {
    const docData = JSON.parse(window.localStorage.getItem(key));

    createNewMenuItem(docData);
  }
}

function createNewMenuItem(docData) {

  const noteContainer = document.createElement("li");
  noteContainer.classList.add("note-container");

  noteContainer.addEventListener('click', function(){
    const openItem = JSON.parse(localStorage.getItem(docData.id))
    console.log(openItem.content)
    edit.style.width="100%"
    loadDoc(docData)

    if(!docData.content) {

    }
  })

  const side = document.createElement("div");

  //SIDE
  const sideContent = document.createElement("div");
  const sinceEdited = document.createElement("p");
  const starIcon = document.createElement("img");

  sideContent.classList.add("side");
  sinceEdited.classList.add("since-edited");
  starIcon.classList.add("star-icon");

  sinceEdited.innerHTML = "1m";
  starIcon.setAttribute("src", "icons/star.svg");

  sideContent.appendChild(sinceEdited);
  sideContent.appendChild(starIcon);


  //MAIN
  const mainContent = document.createElement("div");
  const noteTitle = document.createElement("h2");
  const noteContent = document.createElement("p");

  mainContent.classList.add("main");
  noteTitle.classList.add("note-title");
  noteContent.classList.add("note-content");

  noteTitle.innerHTML = docData.title;
  noteContent.innerHTML = docData.content;

  mainContent.appendChild(noteTitle);
  mainContent.appendChild(noteContent);


  //container för notes och info på vänstra sidan
  //side + main = alla
  noteContainer.appendChild(sideContent);
  noteContainer.appendChild(mainContent);


  noteList.appendChild(noteContainer);
}


//metoder för css animationer
sidebarToggle.addEventListener('click', event => {
    sidebar.style.width = "100%";
});

sidebarCloseButton.addEventListener('click', event => {
  sidebar.style.width = "0%";
});

newDocButton.addEventListener('click', event => {
  edit.style.width = "100%";
});

editBackButton.addEventListener('click', event => {
  edit.style.width = "0%";
});


editorSidebarToggle.addEventListener('click', event => {
  editorSidebar.style.width = "100%";
});

editorSidebarCloseButton.addEventListener('click', event => {
  editorSidebar.style.width = "0%";
});
